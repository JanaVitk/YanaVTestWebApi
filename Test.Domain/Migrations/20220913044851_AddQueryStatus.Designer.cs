// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.Domain.Outputs;

namespace Test.Domain.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20220913044851_AddQueryStatus")]
    partial class AddQueryStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Test.Domain.Models.QueryData", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("TEXT");

                    b.Property<float>("Percent")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("ResultID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Star")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ResultID");

                    b.ToTable("Queries");
                });

            modelBuilder.Entity("Test.Domain.Models.ResultData", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CountSignIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorStr")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOk")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QueryID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Test.Domain.Models.QueryData", b =>
                {
                    b.HasOne("Test.Domain.Models.ResultData", "Result")
                        .WithMany()
                        .HasForeignKey("ResultID");

                    b.Navigation("Result");
                });
#pragma warning restore 612, 618
        }
    }
}
